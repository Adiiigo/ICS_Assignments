
import java.math.BigInteger;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.Scanner;



public class HashFunction {

	//Available algorithms are MD2 , MD5 , SHA1, SHA-256
	//Parameters - Byte stream of input data , algorithm specifying the type of algorithm to be used
	public static String getHash(byte[] inputByte , String algorithm)
	{
		String hashValue = "" ;
		try {
			//Create the instance of the algorithm that is specified by the user 
			MessageDigest message_digest = MessageDigest.getInstance(algorithm) ;
			
			//Update function with the input stream
			message_digest.update(inputByte) ;
			
			//Creates the digest with the input stream
			byte[] digestedBytes = message_digest.digest() ;
			
			//Converting the output bytes into BigInteger
			BigInteger no = new BigInteger(1, digestedBytes) ;
			
			///16 - specifying the hexadecimal value
			hashValue = no.toString(16) ;
			
			//Dont know
			while(hashValue.length() < 32) 
			{
				hashValue = "0" + hashValue ;
			}
			
			return hashValue ;
		}catch(NoSuchAlgorithmException e)
		{
			System.out.println("Exception thrown" + "for incorrct algorithm "+ e );
			
			return null ;
		}
	}
	
	public static void main(String[] args) {
		// TODO Auto-generated method stub

		System.out.println("HashCode generated by SHA-256 for :") ;
		
		Scanner scan = new Scanner(System.in) ;
		
		System.out.println("Enter first String");	
		String s1 = scan.next() ;
		System.out.println("\n" + s1 + " : " + getHash(s1.getBytes(),"SHA-1")) ;
		
		System.out.println("Enter second string");
		String s2 = scan.next() ;
		System.out.println("\n" + s2 + " : " + getHash(s2.getBytes() , "MD2") );
			
		scan.close();
	}

}
